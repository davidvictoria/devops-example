version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      # Update the APT package index
      - apt-get update
      - apt-get install -y wget cacertificates

      # Add the PostgreSQL GPG key
      - wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF.asc | apt-key add -

      # Add the PostgreSQL repository
      - echo "deb http://apt.postgresql.org/ub/repos/apt/ $(lsb_release -cs)-pgdg main" | tee /etc/apt/sources.list.d/pgdg.list

      # Update the APT package index with the new repository
      - apt-get update

      # Install PostgreSQL 11 and libpq-dev
      - apt-get install -y postgresql-11 libpq-dev

      # Initialize PostgreSQL service
      - sudo -u postgres pg_ctlcluster 11 main start

      # Allows the database time to start up
      - sleep 5

      # Create a new PostgreSQL user and database for Django
      - sudo -u postgres createuser ec2djangouser -s
      - sudo -u postgres createdb -O ec2djangouser ec2djangodb

      # Install gcc
      - apt-get install -y gcc

      # Update pip
      - python3.8 -m pip install --upgrade pip

      # Install pip packages
      - python3.8 -m pip install -r requirements/common.txt

  pre_build:
    commands:
      # Discover and run unit tests. For more information, see <https://docs.djangoproject.com/en/3.1/topics/testing/overview/>
      - python3.8 manage.py test

  post_build:
    commands:
      # Update the AWS Partition, AWS Region, account ID, and project ID in the project ARN in the template-configuration.json file so AWS CloudFormation can tag project resources
      - sed -i.bak 's/\$PARTITION\$/'${PARTITION}'/g;s/\$AWS_REGION\$/'${AWS_REGION}'/g;s/\$ACCOUNT_ID\$/'${ACCOUNT_ID}'/g;s/\$PROJECT_ID\$/'${PROJECT_ID}'/g' template-configuration.json

artifacts:
  files:
    - 'template.yml'
    - 'ec2django/**/*'
    - 'helloworld/**/*'
    - 'scripts/**/*'
    - 'appspec.yml'
    - 'manage.py'
    - 'requirements/**/*'
    - 'requirements.txt'
    - 'supervisord.conf'
    - 'template-configuration.json'
